Team Limerence
Irene Lam, Anish Shenoy, Arif Roktim, Yuyang Zhang
SoftDev1 pd7
P02 -- Put It All Together
2017-12-18
 _______   ________  __     __  __        ______    ______
|       \ |        \|  \   |  \|  \      /      \  /      \
| $$$$$$$\| $$$$$$$$| $$   | $$| $$     |  $$$$$$\|  $$$$$$\
| $$  | $$| $$__    | $$   | $$| $$     | $$  | $$| $$ __\$$
| $$  | $$| $$  \    \$$\ /  $$| $$     | $$  | $$| $$|    \
| $$  | $$| $$$$$     \$$\  $$ | $$     | $$  | $$| $$ \$$$$
| $$__/ $$| $$_____    \$$ $$  | $$_____| $$__/ $$| $$__| $$
| $$    $$| $$     \    \$$$   | $$     \\$$    $$ \$$    $$
 \$$$$$$$  \$$$$$$$$     \$     \$$$$$$$$ \$$$$$$   \$$$$$$


===============================================================
COPY AND PASTE THE FOLLOWING TEMPLATE FOR ENTRIES....

topherM -- 1999-12-31 23:59
===============================================================

============================================================
               THE DEVELOPMENT LOG ITSELF...
============================================================

/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
In terms of front end, we had issues regarding the height of the background.
However, we soon realized that was because we were applying the background
to the divs itself and not the body. CSS was a bit of an issue too but that
was mainly because the virtual environment did not refresh when we updated
the file.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Nutritionix API isn't cooperative
    - Two keys procured (api key and app key) but was unauthorized
    curl -i -H "Content-Type: application/json,x-app-id={insert key1},x-app-key={insert key2},x-remote-user-id=0" -X GET https://trackapi.nutritionix.com/v2/search/instant?query=watermelon
    {"message":"unauthorized","id":"42424e8c-5a5c-451f-98c4-b0f01fd77887"}
- Background is in two parts.
	As we have a div, this cuts off the background when the div ends.
	Because of this, the part under the div would be white. However,
	in order to fill that up we had to fill up the body itself. Due
	to that, there is two gradients overlapping.
- Navbar still is not sticky.

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Using Javascript to allow text to pop up was certainly a nice touch to
our home screen. While this was a minor touch, we have a button for food
descriptions that brings you to the previous page. If the user were to be
curious and simply change the URL, pressing the back button will bring them
to whatever page they were at not necessarily the recommendations page.
Adding keys.txt to gitignore prevents others from seeing our keys.

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Nutritionix API changed to back-up Edamam API (same functionality but requires two passes and more parsing)
- Changed FourSquare API and Eventful API to Eventbrite.

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Stashing is dangerous (make sure you push everything you commit in due time!)
- Putting the keys.txt under gitignore allows the keys to be ignored when pushing.
- Divs are important to help keep everything equal/evenly spaced.
- Planning is great but adaptable just as important (FourSquare remains in our history for interested developers)
===========================================
Everyone — 2017-12-14 to 2017-12-19 22:00
------------------------------
All group members worked to develop idea for project pitch on Tuesday.
===========================================
Everyone - 2017-12-19 to 2017-2022 22:00
------------------------------
All members worked on design document.
===========================================

lamI -- 2017-12-21 13:19
------------------------------
- Created site map and page vision detailing all pages including accounts, home, schedule, recommendations, profile and the linkage between each page

zhangY —- 2017-12-21 22:43
------------------------------
Design Document:
 - Created component map to show how different parts of project connect to each other.
 - Assigned roles to individual members of the project.
 - Summarized project goal for design document.

anishS -- 2017-12-21 22:43
------------------------------
Design Document FDBK summary:
 - Users need to be able to add their progress
 - Users need to be able to delete recommendations they don't want
 - Add logout to the sitemap
Design Document Changes:
 - Schedule displays a checkbox asking user for their progress on an activity
 - Recommendations now have a delete option
 - Logout was added to the site map

zhangY —- 2018-01-02 12:50
------------------------------
Researched on possible homepage designs with Bootstrap.
Created base home page with CSS file.
Created folders for other components of project.
*Will create calendar plan for project later tonight.

anishS -- 2018-01-02 13:19
------------------------------
Added Accounts Functionality in db.py
You can now:
  1) Create accounts
  2) Authenticate an account
  3) Check if a user exists

lamI -- 2018-01-02 13:20
------------------------------
- Templates
    - base.html created to hold navbar and other basic html features, extended through other html files
    - login.html contains username and password fields to log a user in
    - createaccount.html contains username, password, age, weight, height, and other necessary profile data (corresponds to database)
    - welcome.html contains the information pertaining to the website, to be updated
- app.py contains the necessary routes for creating an account, logging in, authentification, welcome, and logging out
*Authentification will be continued upon further completion of
- Modified devlog formatting (oldest -> newest correlates with top -> bottom, separators to distinguish different dates and individuals)

anishS -- 2018-01-07 16:55
-----------------------------
Database Functionality: Schedules
1) get_schedule:
      takes in a username
      Returns the entire schedule of user as a dictionary
      format: {time: {activity: "activity", music: "music"}, time: {activity: "activity", music: "music"}, ...}
2) reset_sched:
      Takes in Dict in format:
      {time: {"activity": "ex_activity", "music": "ex_song"], time: {"activity": "ex_activity2", "music": "ex_song2"], ...}
      "time" is a single int representing the start time (each hour has a section in the table)
      ex: if time = 4 then the activities corresponding to that time go on from 4am-5am
3) get_activ_music:
      Takes in a username and time of day
      input time is in format of '2011-05-03 17:45:35.177000' (use str(datetime.now()))
      Returns dict of format {"activity": "ex_activity", "music": "ex_song"}
- Also imported datetime in app.py

lamI -- 2018-01-08 00:45
------------------------------
OpenWeatherMap API:
- Procured API key
- Created global variables (weather, last city, and last time) to prevent too many calls which locks the user out
- get_weather retrieves the JSON based on a given city
- get_forecast retrieves the description, temperature, humidity, sunrise/sunset based on a given city
- Sunrise/Sunset
    - Converted unix time to a more conventional, readable format + pretty printed
    - Hard coded NY as GMT-5 (relevant to New York users)
- Everything tested and debugged (except hardcoded GMT)

zhangY — 2017-01-08 23:50
- Updated templates
- Added bootstrap/CSS for homepage, login, and create account.

lamI -- 2018-01-08 13:19
------------------------------
- Updated Unresolved Issuese and Mid-Development Design Changes
- Procured Edamam keys

anishS - 2018-01-09 23:06
------------------------------
Added More Database Functions:
1) get_all_user_preferences(username):
    Returns a dictionary of all the users preferences
    Takes in a username
2) get_user_pref(username, preference):
    Returns the value of a user's preference
    Takes in a username and one preference
    preference can be one of: "age", "height", "weight", "pfplink", "music", "excercise", "address", "email"
3) edit_user_pref(username, preference, new_val):
    Edits one of the user's attributes
    Takes in a username, the preference to change, and the new value
    preference can be one of: "age", "height", "weight", "pfplink", "music", "excercise", "address", "email"
    Returns the original value
Things discovered: Remember to db.commit()

lamI -- 2018-01-10 00:50
------------------------------
Edamam API:
- How it works (both Edamam and edamam.py):
    1. user names a food item to Edamam (e.g. green apple)
    2. Edamam returns a series of potential uris with a corresponding label on what the uri details
    3. one uri is then chosen and fitted into a JSON format
    4. The JSON is sent to the Edamam API
    5. Edamam returns the nutrition values and relevant information
- Based on Edamam's natural language processing, the closest suggestion to the original item the user wanted is used for the uri in step 3
- Retrieved calories, diet labels, health labels, and cautions
- Everything tested and debugged

zhangY — 2018-01-10 23:40
- Connected navbar
	- Modified parts in app.py so buttons in the navbar will have available paths
	- Created routes for nabber.
- Updated CSS/Bootstrap
	- Changed the Welcome moving text
		- Used another variation of Bootstrap/CSS/HTML
		-Current version stays on screen after sliding across.
	- Attempted the addition of a carousel
		- Carousel currently does not move.
		- Clicking the arrow on the carousel brings to another route.

lamI -- 2018-01-11 03:01
------------------------------
1. schedule.py
- Assigns slots for refreshing the activity (WIP), time, activity, and music recommendation
- Takes in the current time and modifies the schedule accordingly (e.g. if it's 2AM, the schedule starts at 02:00)
- Activities placed in time slots
    - Workout (3 hours) is placed in the earliest slot possible (to be changed when a more specific time is agreed upon)
    - Breakfast, Lunch, and Dinner all have ranges and are placed in the earliest slot possible
        - Breakfast: 6AM - 11 AM
        - Lunch: 12PM - 4 PM
        - Dinner: 5PM - 10PM
- Note: for reasons unknown, refreshing/clearing the activity takes out the entire activity section
2. Miscellaneous
- Schedule.html renders information taken from schedule.py
- Added routes in app.py with necessary variables
- Tested and debugged throughout (working on refreshing/clearing)

lamI -- 2018-01-11 23:17
------------------------------
- Fixed error on refreshing (where clicking the "X" denoting a refresh removed the entire activity section) by making the schedule and song recommendations global

zhangY —- 2018-01-11 23:30
------------------------------
Modified color scheme of page and formatting with divs. Did not push due to testing purposes.

zhangY — 2018-01-13 23:00
------------------------------
Edited home page to format project description. Did not push once again due to testing purposes.

anishS -- 2018-01-15 18:32
------------------------------
Implemented SPOTIFY API
Spotify.py:
  get_access_token():
    Gets An Access token for spotify api
  get_song(genre, energy):
    Takes in genre (all lowercase), danceability(0.0 to 1.0), and energy(0.0 to 1.0)
    Chooses a random song that fits the requirements
    Returns a URI to embed that song on the webpage using iframe

schedule.py:
  changed get_music(time) to return a random pop song.
  TODO: make get_music "dynamic" and return different song types and genres

zhangY —- 2017-01-17
------------------------------
README file had been modified to reflect the nature of the project.
File now has information regarding basics of the project.
It also gives information on how to run project and get API keys.

lamI -- 2018-01-19 02:45
------------------------------
1. schedule.py
- Intervals of five hours between meals (lunch is at least 5 hrs after breakfast, dinner at least 5 hrs after lunch)
- 10 PM sleep to ensure 8hrs of sleep (since the earliest wakeup time is 6 AM)
- Random shower
    - Follows the workout if a workout exists in the schedule
    - Is placed as early in the day as possible if no workout exists in the schedule (but still follows breakfast)
- Removed pre-workout and post-workout meals, and instead placed workouts near breakfast/lunch/dinner
2. Profile
- created route for profile in app.py that passes necessary user information from session and database
- created profile.html, which displays all of the user's information
- created edit_profile.html, which allows the user to edit all features in their profile
    - Drop-down for exercise and music that were used in creating the account were changed to radio buttons for better readability
3. foursquares.py (previously committed but accidentally stashed)
- Retrieved api key and secret key
- Methods that returns the closest store given a certain category
- Takes in latitude longitude and returns an address
4. Miscellaneous
- Created _tokens.py to retrieve secret id (convenience of coding)
- Updated Zone of Reflections
- Everything tested and debugged

anishS -- 2018-01-20
------------------------------
Schedule is now fully populated with Music
Added more music choices in edit profile and create account
**ADDRESS** now only stores city (address preference in db)
TODO: Generating a schedule takes some time so we should have a loading screen

zhangY —- 2018-01-20
------------------------------
Inheritance is now incorporated.
HTML files have been cleaned up so that the navbars and CSS have their own files.
Templates now only have their necessary body materials.
Bootstrap height issues have been somewhat fixed (certain pages still do not extend all the way).
Div now extends the entire width of page.
Wells have been added to give some contrast to the page.
Profile page now has bootstrap added.
*CSS file still needs to be made separate.

lamI -- 2018-01-21 19:42
------------------------------
- Fixed log out (originally kept the user logged in)
- Users must be logged in to view their schedule, recommendations page, profile, etc (previously these could be viewed without logging in)
- Removed redundant "Home" in the navbar (clicking on LIMERENCE was effectively the same)

anishS -- 2018-01-21 22:00
------------------------------
Refreshing Schedule doesn't create a new one
**12 AM == 00:00 not 24:00

zhangY —- 2018-01-21 23:00
------------------------------
Updated create account form.
	Password is now hashed instead of displaying.
Added wells to schedule.
Added a table to hold saved recommendations under profile.
Attempted to modify recommendations but was unable to test due to backend issues.
Added javascript to home page.
	This way description of page will not suddenly pop up and overwhelm user.
	Clicking on link will fade in the information and the link will fade out.

anishS -- 2018-01-22 13:00
------------------------------
Added The Eventbrite API
get_event() in schedules.py should get you a random event

lamI -- 2018-01-22 18:33
------------------------------
1. schedule
- Fixed new_schedule in schedule.py
    - Separated schedule from songs as originally intended
    - Resolved errors regarding schedule and song as a tuple
- "X" functionality -- now replaces the event with a new event as opposed to leaving empty options
- Schedule populates with random events (to an extent)
- Fixed sleep time from 10 AM to 10 PM
- Events will not update to something apart from "Sleep" when the user should be asleep
2. Recommendations
- HTML page populated by several events
- Customizing schedule functionality
    - Drop down menu in recommendations contains multiple options for time the user can choose to replace
    - If desired, the selected event will replace the event in the schedule at the chosen time
3. Templates & Front end
- Updated createaccount.html to show valid location/city (more appropriate for the APIs)
- Updated login to properly show "username" as opposed to "email"
- Updaed table for recommendations and corrected <tbody> layout
4. Miscellaneous
- Resolved issues regarding SIGPIPE (not supported by Windows)
- Fixed bug in db.py where time was a dict instead of int values
- Replaced random flask messages to more relevant ones or replaced altogether

zhangY —- 2018-01-22 23:00
------------------------------
Created home page for logged in users.
	Home page will present users with the possible options of recommendation, schedule, or profile.
	Done using multiple wells and buttons aligned.
Due to misunderstanding, certain aspects of templates had to be revived.
	Recreated table for saved recommendations under profile.
	Changed certain icons for aesthetic purpose.

anishS -- 2018-01-23 13:45
-----------------------------
Added Smart Recommendations -
1) Exercises are equipped with links and demos
2) limited to 10 songs, share same algorithm as schedule
3) Rerouted additions to /Recommendations
4) More even distribution of events, foods, exercises, sleep
5) Food desc page from edamam now included

zhangY —- 2018-01-23 21:30
------------------------------
Attempted to create sticky navbar (did not accomplish).
Added food description page.
	This page can be accessed through the recommendations page by clicking on “More Information” in regards to the food item.
	This page will have a button that brings the user back to their previous page through means of Javascript.
Table for recommendations have been modified for separation of events.
Saved recommendations can be found under profile.
Calorie counter may be implemented through our own formulas.

lamI -- 2018-01-24 00:48
------------------------------
- Updated Readme with a better summary and directions for procuring API keys
- Updated Zone of Reflection
- Recording for video demo (sorry for the lack of tone fluctuations, I haven't been able to hear myself due to a fever these past few days)
